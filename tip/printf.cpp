가변인수 
이전에 templete을 통한 가변인자 활용을 하는 방법이 있었는데. 
printf 에서 쓰이는 가변인자 활용법을 알아보았다.

printf함수의 원형은

int printf(const char* format, ...);

첫 인자로 서식문자열을 받고 그다음 부터는 타입에 관계없이, 수에 상관없이 받아들인다. 여기서 두 번째 ...을 가변인수라하고 
첫 번째 인자는 고정인수라고한다.

간단하게 가변 인수 함수를 만들어보면

void VarFunc(auto a_first,auto a_second, auto last, ...) {
  va_list ap;
  va_start(ap,last);
  while() {
    va_arg(ap, type);
  }
  va_end(ap);
}
로 만들 수 있다.


va_list ap

함수로 전달되는 인수들은 스택에 들어가게 된다. 스택에 있는 인수를 읽을 때 포인터 연산을 해야하는데 이를 수행해줄 포인터 변수가 va_list (char*) 이다.
ap는 가변인수를 나타내는 의미로 다르게 바꾸어도 무관하다.

va_start(ap, 마지막 고정인수) 

이는 가변인수를 받아들이기 위해서 그 위치를 주소로 알기 위해서 마지막 고정인수를 매개변수로 주어서 마지막고정인수의 주소를 활용해서 가변인수를
받을 수 있게하는 것이다.

va_arg(ap, 인수의 타입) 

가변인수를 받아들이는 것이다 수행 될때마다 ap는 다음번지로 이동하게 된다. 여기서 인수의 타입을 어떻게 받느냐는 va_arg가 매크로함수이기 때문에 가능한 것이다.
내부적으로 sizeof 연산자와 캐스트 연산자를 이용하여 전달한다.
